# Redis Helm Chart Values

# Global settings
global:
  imageRegistry: ""

# Redis configuration
redis:
  # Redis image configuration
  image:
    repository: redis
    tag: "7.0-alpine"
    pullPolicy: IfNotPresent

  # Redis configuration (using command line arguments)
  # Password will be set via secret
  # Other settings use Redis defaults

# Deployment configuration
deployment:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1

  # Resource limits and requests
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 256Mi

  # Node selector
  nodeSelector: {}

  # Tolerations
  tolerations: []

  # Affinity
  affinity: {}

  # Security context
  securityContext:
    runAsNonRoot: true
    runAsUser: 999
    fsGroup: 999

  # Container security context
  containerSecurityContext:
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 999
    capabilities:
      drop:
        - ALL

# Service configuration
service:
  type: ClusterIP
  port: 6379
  targetPort: 6379
  annotations: {}

# Persistence configuration
persistence:
  enabled: true
  storageClass: ""
  accessMode: ReadWriteOnce
  size: 8Gi
  annotations: {}

# Secret configuration
secret:
  # If not provided, a random password will be generated
  password: ""
  # Secret name (if not provided, will be generated)
  name: ""

# Monitoring configuration
monitoring:
  enabled: false
  serviceMonitor:
    enabled: false
    interval: 30s
    scrapeTimeout: 10s

# Health check configuration
healthCheck:
  enabled: true
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 3

# Liveness probe configuration
livenessProbe:
  enabled: true
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 3

# Readiness probe configuration
readinessProbe:
  enabled: true
  initialDelaySeconds: 5
  periodSeconds: 5
  timeoutSeconds: 3
  successThreshold: 1
  failureThreshold: 3

# Pod disruption budget
podDisruptionBudget:
  enabled: false
  minAvailable: 1

# Network policy
networkPolicy:
  enabled: true
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: auth-service
      ports:
        - port: 6379
          protocol: TCP
  egress: []

# Service account
serviceAccount:
  create: true
  name: ""
  annotations: {}

# Pod annotations
podAnnotations: {}

# Pod labels
podLabels: {}

# Service annotations
serviceAnnotations: {}

# Ingress configuration
ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: redis.local
      paths:
        - path: /
          pathType: Prefix
  tls: []

# Autoscaling
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80
